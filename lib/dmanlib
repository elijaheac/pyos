#!/usr/bin/env python2

"""Basic functions and classes supporting dman and allowing programs to render output into dman buffers."""

import multiprocessing as mp
import ipc

class VirtualTerminal(object):
    def	__init__(self, pid):
        self.pid = pid
        self.path = "/proc/dman/" + str(pid)
        self.dman = ipc.socket("dman", pid)

    def printf(self, *args, **kwargs):
        if kwargs.get("file", "stdout") == "stderr":
            req = [2]
        else:
            req = [1]

        req.extend(args)
        req.append(kwargs)

        self.dman.write( tuple(req) )

        mp.force( mp.get_pid("dman") )

    def input(self, prompt = "", echo = True, char = 1000000000, raw = False, endchar = '\n\x18\x04', history = ()):
        req = (0, prompt, echo, char, raw, endchar, history, self.path)
        self.dman.write( tuple(req) )

        mp.force( mp.get_pid("dman") )

        return get_path(self.path)
