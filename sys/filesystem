#!/usr/bin/env python2

class Socket(object):
	_socket = True
	def __init__(self, data, meta = 0):
		self.data = data
		self.meta = meta

class SocketFileSystem(object):
	def __init__(self):
		self.data = {}
		self.meta = {}
	
	def keys(self):
		return self.data.keys()

	def values(self):
		return self.data.values()

	def __getattr__(self, name):
		return getattr(self.data, name)

	def __getitem__(self, name):
		return self.data[name].pop( self.meta[name] )
	
	def __setitem__(self, name, value):
		if name in self.data.keys():
			self.data[name].insert( self.meta[name], value )
		elif "_socket" in value.__dict__.keys():
			self.data[name] = value.data
			self.meta[name] = value.meta
		else:
			self.data[name] = [value]
			self.meta[name] = 0

	def __delitem__(self, name):
		del self.data[name]

def bootstrap():
	set_path("/proc/stdin", SocketFileSystem())
	set_path("/proc/stdout", SocketFileSystem())
	set_path("/proc/stderr", SocketFileSystem())
	set_path("/proc/socket", SocketFileSystem())

def cleanup():
	set_path("/proc", {})
